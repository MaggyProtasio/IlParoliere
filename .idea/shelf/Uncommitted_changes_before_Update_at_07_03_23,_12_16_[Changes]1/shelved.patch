Index: src/Utente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Utente.java b/src/Utente.java
new file mode 100644
--- /dev/null	
+++ b/src/Utente.java	
@@ -0,0 +1,15 @@
+public class Utente {
+    private String nickname;
+
+    public Utente(String nickname) {
+        this.nickname = nickname;
+    }
+
+    public String getNickname() {
+        return nickname;
+    }
+
+    public void setNickname(String nickname) {
+        this.nickname = nickname;
+    }
+}
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello world!\");\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	
+++ b/src/Main.java	
@@ -1,5 +1,6 @@
 public class Main {
     public static void main(String[] args) {
+
         System.out.println("Hello world!");
     }
 }
\ No newline at end of file
Index: src/Dizionario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dizionario.java b/src/Dizionario.java
new file mode 100644
--- /dev/null	
+++ b/src/Dizionario.java	
@@ -0,0 +1,49 @@
+import java.io.*;
+import java.util.ArrayList;
+
+public class Dizionario {
+    private String parola;
+
+    public Dizionario(String parola) {
+        this.parola = parola;
+    }
+
+    public String getParola() {
+        return parola;
+    }
+
+    public void setParola(String parola) {
+        this.parola = parola;
+    }
+
+    public void Trovaparola(String p){
+        FileReader f;
+        try {
+            f=new FileReader("660000_parole_italiane.txt");
+        } catch (FileNotFoundException e) {
+            throw new RuntimeException(e);
+        }
+
+        BufferedReader b;
+        b=new BufferedReader(f);
+
+        String parolaDizionario;
+
+        try {
+            while(true) {
+                parolaDizionario = b.readLine();
+                if (parolaDizionario == null) {
+                    break;
+                } else {
+                    if (true) {
+                        System.out.println(parolaDizionario);
+                    }
+                }
+
+
+            }
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+    }
+}
